// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3206.FinalArtemis.commands;
import edu.wpi.first.wpilibj.smartdashboard.*;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3206.FinalArtemis.Robot;

/**
 *
 */
public class AutoTurn extends Command {

    double GyroAngle;
	double GyroCoefficient = 1.0; //may or may not need coefficient
    int DesiredAngle;
    String DesiredDirection;

    public AutoTurn(String Direction, int Angle) {
        requires(Robot.driveTrain);
        DesiredDirection = Direction;
        DesiredAngle = Angle;
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.driveTrain.resetNavX();
        AutoTurn.this.setTimeout(5);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        GyroAngle = Math.abs(GyroCoefficient * Robot.driveTrain.getYaw());
        SmartDashboard.putNumber("Gyro Angle Degrees", GyroAngle);

        //Prevent Command Overruns
        if (AutoTurn.this.isTimedOut()) {
            Robot.driveTrain.stop();
            SmartDashboard.putNumber("Gyro Angle Degrees", GyroAngle);
            SmartDashboard.putNumber("Runtime", AutoTurn.this.timeSinceInitialized());
            Robot.driveTrain.resetNavX();
            end();
        } else {
        
		if (DesiredDirection == "left") {
			Robot.driveTrain.Rotate(.65);
		}
		else if (DesiredDirection == "right") {
			Robot.driveTrain.Rotate(-.65);
        }
        SmartDashboard.putNumber("Runtime", AutoTurn.this.timeSinceInitialized());
        SmartDashboard.putNumber("Gyro Angle Degrees", GyroAngle);
    }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        if (GyroAngle >= DesiredAngle) {
    		return true;
    	}
    	else {
    		return false;
    	}
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.driveTrain.stop();
        SmartDashboard.putNumber("Gyro Angle Degrees", GyroAngle);
        //Robot.driveTrain.resetNavX();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}
